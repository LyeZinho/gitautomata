version: '3.8'

services:
  gitautomata:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      - GITHUB_API_URL=${GITHUB_API_URL:-https://api.github.com}
      - GITHUB_API_VERSION=${GITHUB_API_VERSION:-2022-11-28}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      # Opcional: montar pasta de automações customizadas
      - ./custom-automations:/app/custom-automations:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Opcional: Adicionar Redis para cache/queue
  # redis:
  #   image: redis:7-alpine
  #   restart: unless-stopped
  #   volumes:
  #     - redis_data:/data

  # Opcional: Adicionar PostgreSQL para persistência
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: gitautomata
  #     POSTGRES_USER: gitautomata
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped

# volumes:
#   redis_data:
#   postgres_data: